---
- hosts: bonchvisor09
  remote_user: cephadmin
  become: true
  become_user: root
  become_method: sudo

  tasks:

#  - name: install openstack nova compute elements
#    yum:
#     name: "{{ packages }}"
#     state: latest
#    vars:
#     packages:
#     - openstack-neutron-linuxbridge
#     - ebtables
#     - ipset
#     - openstack-nova-compute
#     - openstack-neutron-ml2
#     - openstack-neutron-openvswitch


  - name: restart openvswitch services
    systemd:
     state: restarted
     enabled: yes
     daemon_reload: yes
     name: openvswitch.service

  - name: get public ip address
    shell: echo 172.17.2.$((50+$(echo $HOSTNAME | awk -F "bonchvisor" '{print $2}' | sed 's/^0*//')))
    args:
     executable: /bin/bash
    register: public_ip

  - name: get private ip address
    shell: echo 172.17.3.$((50+$(echo $HOSTNAME | awk -F "bonchvisor" '{print $2}' | sed 's/^0*//')))
    args:
     executable: /bin/bash
    register: private_ip

  - name: get first interface name
    shell: "ip a | grep enp | awk 'NR==1{print $2}' | tr -d :"
    args:
     executable: /bin/bash
    register: firstport

  - name: get second interface name
    shell: "ip a | grep enp | awk 'NR==2{print $2}' | tr -d :"
    args:
     executable: /bin/bash
    register: secondport

#  - name: cretae tetmplate file with ip
#    template:
#     src: /etc/ansible/files/networks/testfile.j2
#     dest: /etc/file.conf
#     owner: root
#     group: root
#     mode: 0644

  - name: collect old ifcfg-files
    shell: ls /etc/sysconfig/network-scripts/ | grep ifcfg | grep -v 'ifcfg-lo\|ifcfg-ens1f0\|ens1f1' | awk '{print $1}'
    args:
     executable: /bin/bash
    register: oldint

  - name: delete old interface files
    file:
     state: absent
     path: /etc/sysconfig/network-scripts/{{ item }}
    loop: "{{oldint.stdout_lines}}"
    when: oldint.stdout != ""

  - name: cretae ifcfg-{{ firstport.stdout }} network config file
    template:
     src: /etc/ansible/files/networks/ifcfg-physicalif01
     dest: /etc/sysconfig/network-scripts/ifcfg-{{ firstport.stdout }}
     owner: root
     group: root
     mode: 0644    

  - name: cretae ifcfg-{{ secondport.stdout }} network config file
    template:
     src: /etc/ansible/files/networks/ifcfg-physicalif02
     dest: /etc/sysconfig/network-scripts/ifcfg-{{ secondport.stdout }}
     owner: root
     group: root
     mode: 0644

  - name: cretae bond0 network config file
    template:
     src: /etc/ansible/files/networks/ifcfg-bond0
     dest: /etc/sysconfig/network-scripts/ifcfg-bond0
     owner: root
     group: root
     mode: 0644

  - name: cretae main bridge network config file
    template:
     src: /etc/ansible/files/networks/ifcfg-br-ext-main
     dest: /etc/sysconfig/network-scripts/ifcfg-br-ext-main
     owner: root
     group: root
     mode: 0644

  - name: cretae mgmt0 network config file
    template:
     src: /etc/ansible/files/networks/ifcfg-mgmt0
     dest: /etc/sysconfig/network-scripts/ifcfg-mgmt0
     owner: root
     group: root
     mode: 0644

  - name: cretae main bridge network config file
    template:
     src: /etc/ansible/files/networks/ifcfg-port-int
     dest: /etc/sysconfig/network-scripts/ifcfg-port-int
     owner: root
     group: root
     mode: 0644

  - name: check ovs bond exist
    shell: ovs-vsctl show | grep bond0 | awk '{print $2}'
    args:
     executable: /bin/bash
    register: bondexist

  - name: check mgmt0 port exist
    shell: ovs-vsctl show | grep Port | grep mgmt0 | awk '{print $2}'
    args:
     executable: /bin/bash
    register: mgmtexist

  - name: check mgmt-bidge exist
    shell: ovs-vsctl show | grep br-mgmt | awk '{print $2}'
    args:
     executable: /bin/bash
    register: brmgmtexist

  - name: create bond if no exist
    shell: ovs-vsctl add-bond ovs-main bond0 {{ firstport.stdout }} {{ secondport.stdout }}
    args:
     executable: /bin/bash
    when: bondexist.stdout == ""

  - name: set bond lacp to active
    shell: ovs-vsctl set port bond0 lacp=active
    args:
     executable: /bin/bash
    when: bondexist.stdout == ""

  - name: create management bridge
    shell: ovs-vsctl add-br br-mgmt ovs-main 162
    args:
     executable: /bin/bash
    when: brmgmtexist.stdout == ""

  - name: add management port mgmt0
    shell: ovs-vsctl add-port br-mgmt mgmt0 -- set interface mgmt0 type=internal
    args:
     executable: /bin/bash
    when: mgmtexist.stdout == ""

  - name: restart network services
    systemd:
     state: restarted
     enabled: yes
     daemon_reload: yes
     name: network.service


